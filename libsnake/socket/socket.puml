@startuml

skinparam ranksep 50
skinparam linetype ortho

class socket_t {
- fd_: int

{static} + socket_init_connect(self: socket_t*, host: const char*, port: in_port_t): bool
{static} + socket_init_listen(self: socket_t*, port: in_port_t): bool
{static} + socket_accept(self: socket_t*, out_socket: socket_t*): bool
{static} + socket_read(self: socket_t*, buffer: char*, buffer_length: size_t): bool
{static} + socket_write(self: socket_t*, buffer: const char*, buffer_length: size_t): bool
{static} + socket_close(self: socket_t*): void
}

enum socket_message_type_t {
+ SOCKET_MESSAGE_GAME_FULL
+ SOCKET_MESSAGE_CONNECTED
+ SOCKET_MESSAGE_MAP
+ SOCKET_MESSAGE_TILE_CHANGE
+ SOCKET_MESSAGE_PLAYER_STATE
+ SOCKET_MESSAGE_DIRECTION
+ SOCKET_MESSAGE_DISCONNECT
+ SOCKET_MESSAGE_GAME_END
+ SOCKET_MESSAGE_PAUSE
+ SOCKET_MESSAGE_UNPAUSE
+ SOCKET_MESSAGE_RESPAWN
}

struct socket_message_magic_bytes_data_t {
+ bytes_: char[4]
}

struct map_tile_t

struct socket_message_map_data_t {
+ width_: coordinate_t
+ height_: coordinate_t
+ tiles_: map_tile_t*
}
socket_message_map_data_t *-- map_tile_t

struct socket_message_tile_change_t {
+ row_: coordinate_t
+ column_: coordinate_t
+ tile_: map_tile_t
}
socket_message_tile_change_t *-- map_tile_t

struct socket_message_player_state_t {
+ status_: player_status_t
+ direction_: direction_t
}

struct socket_message_direction_t {
+ direction_: direction_t
}

struct socket_message_data_t <<union>> {
+ map_: socket_message_magic_bytes_data_t*
+ map_: socket_message_map_data_t*
+tile_change_: socket_message_tile_change_t*
+ player_state_: socket_message_player_state_t*
+ direction_: socket_message_direction_t*
}
socket_message_data_t *-- socket_message_magic_bytes_data_t
socket_message_data_t *-- socket_message_map_data_t
socket_message_data_t *-- socket_message_tile_change_t
socket_message_data_t *-- socket_message_player_state_t
socket_message_data_t *-- socket_message_direction_t

struct map_t

struct socket_message_t {
+ type_: socket_message_type_t
+ data_: socket_message_data_t

{static} + socket_message_init_magic_bytes(self: socket_message_t*, magic_bytes: const char*): void
{static} + socket_message_init_game_full(self: socket_message_t*): void
{static} + socket_message_init_connected(self: socket_message_t*): void
{static} + socket_message_init_map(self: socket_message_t*, map: const map_t*): void
{static} + socket_message_init_tile_change(self: socket_message_t*, row: coordinate_t, column: coordinate_t, tile: map_tile_t): void
{static} + socket_message_init_player_state(self: socket_message_t*, status: player_status_t, direction: direction_t): void
{static} + socket_message_init_direction(self: socket_message_t*, direction: direction_t): void
{static} + socket_message_init_disconnect(self: socket_message_t*): void
{static} + socket_message_init_game_end(self: socket_message_t*): void
{static} + socket_message_init_pause(self: socket_message_t*): void
{static} + socket_message_init_unpause(self: socket_message_t*): void
{static} + socket_message_init_respawn(self: socket_message_t*): void
{static} + socket_message_serialize(self: const socket_message_t*, out_length: size_t*): char*
{static} + socket_message_serialize_to_socket(self: const socket_message_t*, socket: socket_t*): bool
{static} + socket_message_deserialize_from_socket(socket: socket_t*, out_message: socket_message_t*): bool
{static} + socket_message_deserialize_to_map(self: const socket_message_t*, map: map_t*): void
{static} + socket_message_destroy(self: socket_message_t*): void
{static} + socket_message_destroy_buffer(buffer: char*): void
{static} - socket_message_calculate_data_buffer_size(self: const socket_message_t*): size_t
{static} - socket_message_serialize_magic_bytes(data: const socket_message_magic_bytes_data_t*, buffer: char*): void
{static} - socket_message_serialize_map_tile(tile: const map_tile_t*, buffer: char*): char*
{static} - socket_message_serialize_map(data: const socket_message_map_data_t*, buffer: char*): void
{static} - socket_message_serialize_tile_change(data: const socket_message_tile_change_t*, buffer: char*): void
{static} - socket_message_serialize_player_state(data: const socket_message_player_state_t*, buffer: char*): void
{static} - socket_message_serialize_direction(data: const socket_message_direction_t*, buffer: char*): void
{static} - socket_message_deserialize_magic_bytes_from_socket(socket: socket_t*, out_data: socket_message_data_t*): bool
{static} - socket_message_deserialize_map_tile(buffer: char*, out_tile: map_tile_t*): char*
{static} - socket_message_deserialize_map_from_socket(socket: socket_t*, out_data: socket_message_data_t*): bool
{static} - socket_message_deserialize_tile_change_from_socket(socket: socket_t*, out_data: socket_message_data_t*): bool
{static} - socket_message_deserialize_player_state_from_socket(socket: socket_t*, out_data: socket_message_data_t*): bool
{static} - socket_message_deserialize_direction_from_socket(socket: socket_t*, out_data: socket_message_data_t*): bool
}
socket_message_t *-- socket_message_data_t
socket_message_t ..> socket_t : <<uses>>
socket_message_t ..> map_t : <<uses>>

socket_t -[hidden]- socket_message_type_t

@enduml
